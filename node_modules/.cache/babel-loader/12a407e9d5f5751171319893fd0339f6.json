{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Janus\\\\Desktop\\\\Certified Tech Developer\\\\fe3-final\\\\src\\\\Components\\\\utils\\\\global.context.jsx\";\nimport { createContext, useState, useMemo } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const initialState = {\n  theme: \"light\",\n  data: []\n};\nexport const ContextGlobal = /*#__PURE__*/createContext(undefined);\nexport const ContextProvider = _ref => {\n  let {\n    children\n  } = _ref;\n  //Aqui deberan implementar la logica propia del Context, utilizando el hook useMemo\n  // const [state, setState] = useState(initialState);\n  // const toggleTheme = () => {\n  //   setState(prevState => ({\n  //     ...prevState,\n  //     theme: prevState.theme === \"light\" ? \"dark\" : \"light\"\n  //   }));\n  // };\n  // const contextValue = useMemo(() => {\n  //   return {\n  //     state,\n  //     toggleTheme\n  //   };\n  // }, [state]);\n  return /*#__PURE__*/_jsxDEV(ContextGlobal.Provider, {\n    value: {\n      contextValue\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n_c = ContextProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"ContextProvider\");","map":{"version":3,"names":["createContext","useState","useMemo","initialState","theme","data","ContextGlobal","undefined","ContextProvider","children","contextValue"],"sources":["C:/Users/Janus/Desktop/Certified Tech Developer/fe3-final/src/Components/utils/global.context.jsx"],"sourcesContent":["import { createContext , useState, useMemo} from \"react\";\r\n\r\nexport const initialState = {theme: \"light\", data: []}\r\n\r\nexport const ContextGlobal = createContext(undefined);\r\n\r\nexport const ContextProvider = ({ children }) => {\r\n  //Aqui deberan implementar la logica propia del Context, utilizando el hook useMemo\r\n  // const [state, setState] = useState(initialState);\r\n\r\n  // const toggleTheme = () => {\r\n  //   setState(prevState => ({\r\n  //     ...prevState,\r\n  //     theme: prevState.theme === \"light\" ? \"dark\" : \"light\"\r\n  //   }));\r\n  // };\r\n\r\n  // const contextValue = useMemo(() => {\r\n  //   return {\r\n  //     state,\r\n  //     toggleTheme\r\n  //   };\r\n  // }, [state]);\r\n\r\n\r\n  return (\r\n    <ContextGlobal.Provider value={{contextValue}}>\r\n      {children}\r\n    </ContextGlobal.Provider>\r\n  );\r\n};\r\n"],"mappings":";AAAA,SAASA,aAAT,EAAyBC,QAAzB,EAAmCC,OAAnC,QAAiD,OAAjD;;AAEA,OAAO,MAAMC,YAAY,GAAG;EAACC,KAAK,EAAE,OAAR;EAAiBC,IAAI,EAAE;AAAvB,CAArB;AAEP,OAAO,MAAMC,aAAa,gBAAGN,aAAa,CAACO,SAAD,CAAnC;AAEP,OAAO,MAAMC,eAAe,GAAG,QAAkB;EAAA,IAAjB;IAAEC;EAAF,CAAiB;EAC/C;EACA;EAEA;EACA;EACA;EACA;EACA;EACA;EAEA;EACA;EACA;EACA;EACA;EACA;EAGA,oBACE,QAAC,aAAD,CAAe,QAAf;IAAwB,KAAK,EAAE;MAACC;IAAD,CAA/B;IAAA,UACGD;EADH;IAAA;IAAA;IAAA;EAAA,QADF;AAKD,CAxBM;KAAMD,e"},"metadata":{},"sourceType":"module"}